status = error
name = PropertiesConfig

# Lista de propiedades

# DEBUG, INFO, WARN, ERROR, FATAL
property.log.level = DEBUG

# Decidir donde mostrar el mensaje conola o archivo: Console: console    Archivo: file
property.root.logger = console
property.log.dir = C:\\Log\\ShoppingApplication
#property.log.dir = /home/Log/ShoppingApplication
property.log.filename = shoppingApplication.log
property.MaxBackupIndex = 60

filter.threshold.type = ThresholdFilter
filter.threshold.level = debug

# Configuracion para mostrar los mensajes en la consola
appender.console.type = Console
appender.console.name = console
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %l [%t]: %m%n

# Configuracion para la genrracion del archivo log
appender.rolling.type = RollingFile
appender.rolling.name = file
appender.rolling.fileName = ${log.dir}/${log.filename}
appender.rolling.filePattern = ${log.dir}/${log.filename}-%d{yyyy-MM-dd}.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %l [%t]: %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=100MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

# root logger
rootLogger.level = ${log.level}
rootLogger.appenderRefs = root
rootLogger.appenderRef.root.ref = ${root.logger}